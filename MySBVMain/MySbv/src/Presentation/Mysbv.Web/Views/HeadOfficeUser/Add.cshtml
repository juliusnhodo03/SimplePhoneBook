@model Application.Dto.Users.UserDto
@using Kendo.Mvc.UI
@{
    ViewBag.Title = "Add Head Office User";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    .label {
        width: 100px !important;
    }

    .required:after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>

<div class="well">

    <p>Fields marked with an asterisk <span class="requiredField">*</span> are required</p>

    <div class="ui-widget-header">
        <h3 style="margin-left: 5px"> Create Head Office User Account</h3>
    </div>
    <div id="content">




        @using (Html.BeginForm())
        {
            @Html.ValidationSummary()
            <div class="ui-widget-content" style="padding: 5px;">

                <div class="row">

                    <div class="span4"><h4>User Information</h4></div>
                    <div class="span4 offset2"><h4>Login Information</h4></div>
                </div>


                <div class="row">
                    <div class="span2">

                        @Html.LabelFor(a => a.TitleId, new { @class = "label required", @style = "width:150px !important" })

                    </div>
                    <div class="span2">
                        @(Html.Kendo().DropDownListFor(a => a.TitleId).BindTo(ViewData["Titles"] as SelectList).HtmlAttributes(new { @style = "width:238px; margin-bottom: 8px", @tabindex = "1" }))
                    </div>
                    
                    <div class="input-prepend">
                        <div class="span2 offset2">
                            @Html.LabelFor(a => a.UserName, new { @class = "label required", @style = "width:150px !important" })

                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(a => a.UserName, new { @class = "tbstyle", @id = "username", @maxlength = "12" })
                            @Html.ValidationMessageFor(m => m.UserName)
                        </div>
                    </div>
                    </div>

                <div class="row">
                    <div class="input-prepend">
                        <div class="span2">
                            @Html.LabelFor(a => a.FirstName, new { @class = "add-on required", @style = "width:150px" })
                            <span class="requiredField">*</span>
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(a => a.FirstName, new { @class = "tbstyle", @id = "firstname", @maxlength = "20", @tabindex = "2" })
                            @Html.ValidationMessageFor(a => a.FirstName)
                        </div>
                        <div class="span2 offset2">
                            @Html.LabelFor(a => a.EmailAddress, new { @class = "label required", @style = "width:150px !important" })

                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(a => a.EmailAddress, new { @class = "tbstyle", @maxlength = "100", @tabindex = "10" })
                            @Html.ValidationMessageFor(m => m.EmailAddress)
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="input-prepend">
                        <div class="span2">
                            @Html.LabelFor(a => a.LastName, new { @class = "add-on required", @style = "width:150px" })
                            <span class="requiredField">*</span>
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(a => a.LastName, new { @class = "tbstyle", @id = "lastname", @maxlength = "20", @tabindex = "3" })
                            @Html.ValidationMessageFor(a => a.LastName)
                        </div>
                        <div class="span2 offset2">
                            @Html.LabelFor(a => a.Password, new { @class = "label required", @style = "width:150px !important" })

                        </div>
                        <div class="span2">
                            @Html.PasswordFor(a => a.Password, new { @class = "tbstyle", @maxlength = "20", @tabindex = "11" })
                            @Html.ValidationMessageFor(m => m.Password)
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="input-prepend">
                        <div class="span2">
                            <span class="label" style="width: 150px !Important">
                                SA Citizen ?
                                <span class="requiredField">*</span>
                            </span>
                        </div>
                        <div class="span2">
                            <span style="width :150px ; margin-right:5px;"></span><input type="checkbox" tabindex="4" checked="checked" id="chkCitizenship" />
                        </div>
                        <div class="span2 offset2">
                            @Html.LabelFor(a => a.ConfirmPassword, new { @class = "label required", @style = "width:150px !important" })
                        </div>
                        <div class="span2">
                            @Html.PasswordFor(a => a.ConfirmPassword, new { @class = "tbstyle", @maxlength = "20", @tabindex = "12" })
                            @Html.ValidationMessageFor(m => m.ConfirmPassword)
                        </div>
                    </div>
                </div>

                <div class="row" id="SAIdNumber">
                    <div class="input-prepend">
                        <div class="span2">
                            @Html.LabelFor(a => a.IdNumber, new { @class = "add-on required", @style = "width:150px" })
                            <span class="requiredField">*</span>
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(a => a.IdNumber, new { @class = "tbstyle", @id = "idnumber", @maxlength = "14", @tabindex = "5" })
                            @Html.ValidationMessageFor(a => a.IdNumber)
                        </div>

                    </div>
                </div>


                <div class="row" id="PassportNumber">
                    <div class="input-prepend">
                        <div class="span2">
                            @Html.LabelFor(a => a.PassportNumber, new { @class = "add-on required", style = "width: 150px" })
                            <span class="requiredField">*</span>
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(a => a.PassportNumber, new { @class = "tbstyle", @id = "passportnumber", @maxlength = "20", @tabindex = "5" })
                            @Html.ValidationMessageFor(a => a.PassportNumber)
                        </div>

                    </div>
                </div>

                <div class="row">
                    <div class="input-prepend">
                        <div class="span2">
                            @Html.LabelFor(a => a.CellNumber, new { @class = "add-on required", @style = "width:150px" })
                            <span class="requiredField">*</span>
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(a => a.CellNumber, new { @class = "tbstyle", @maxlength = "10", @tabindex = "6" })
                            @Html.ValidationMessageFor(a => a.CellNumber)
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="input-prepend">

                        <div class="span2">
                            @Html.LabelFor(a => a.OfficeNumber, new { @class = "add-on required", @style = "width:150px" })
                            <span class="requiredField">*</span>
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(a => a.OfficeNumber, new { @class = "tbstyle", @maxlength = "10", @tabindex = "7" })
                            @Html.ValidationMessageFor(a => a.OfficeNumber)
                        </div>
                    </div>
                </div>


                <div class="row">
                    <div class="input-prepend">
                        <div class="span2">
                            @Html.LabelFor(a => a.FaxNumber, new { @class = "add-on", @style = "width:150px" })
                            <span class="requiredField">*</span>
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(a => a.FaxNumber, new { @class = "tbstyle", @maxlength = "10", @tabindex = "8" })
                            @Html.ValidationMessageFor(a => a.FaxNumber)
                        </div>
                    </div>
                </div>


                <div class="row">
                    <div class="input-prepend">
                        <div class="span2">
                            @Html.LabelFor(a => a.IsLocked, new { @class = "add-on", @style = "width:150px" })

                        </div>
                        <div class="span2">
                            <span style="width :150px ; margin-right:5px;"></span>
                            @Html.CheckBoxFor(a => a.IsLocked, new { @class = "chkbxstyle", @tabindex = "9" })
                            @Html.ValidationMessageFor(a => a.IsLocked)
                        </div>
                    </div>
                </div>

                <hr>
                <div class=" row">
                    <div class="span5"><h4>Role Information</h4></div>
                </div>

                <p><b>User must have at least 1 role </b><span class="requiredField">*</span> </p>

                <div class="row">
                    <div class="span2">@Html.LabelFor(model => model.IsAdmin)</div>
                    <div class="span2">@Html.LabelFor(model => model.IsApprover)</div>
                    <div class="span2">@Html.LabelFor(model => model.IsFinanceReviewer)</div>
                    <div class="span2">@Html.LabelFor(model => model.IsDataCapture)</div>
                </div>

                <div class="row">
                    <div class="span2">
                        @Html.CheckBoxFor(model => model.IsAdmin, new { @class = "chkbxstyle", @tabindex = "13" })
                        @Html.ValidationMessageFor(model => model.IsAdmin)
                    </div>

                    <div class="span2">
                        @Html.CheckBoxFor(model => model.IsApprover, new { @class = "chkbxstyle", @tabindex = "14" })
                        @Html.ValidationMessageFor(model => model.IsApprover)
                    </div>

                    <div class="span2">
                        @Html.CheckBoxFor(model => model.IsFinanceReviewer, new { @class = "chkbxstyle", @tabindex = "15" })
                        @Html.ValidationMessageFor(model => model.IsFinanceReviewer)
                    </div>

                    <div class="span2">
                        @Html.CheckBoxFor(model => model.IsDataCapture, new { @class = "chkbxstyle", @tabindex = "16" })
                        @Html.ValidationMessageFor(model => model.IsDataCapture)
                    </div>
                    <hr />
                    <div class="row">
                        <div style="margin-left: 33px">
                            <div class="span2 offset8">
                                <input type="submit" value="Save" class="btn btn-primary" style="width: 100px" tabindex="17" />
                            </div>
                            <div class="span1">
                                <a href='@Url.Action("Index")' id="confirm" class="btn btn-danger" style="width: 70px; margin-left: -45px" tabindex="18">Cancel</a>
                            </div>
                        </div>
                    </div>




                </div>

            </div> <!--end of--Containter -->

        }

    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">

        $(document).ready(function () {
            $("#SAIdNumber").show();
            $("#PassportNumber").hide();

            var lastname = $('#lastname').val(@Model.LastName);

            if (lastname == "") {
                $('#lastname').val(' ');
            } else { 
                $('#lastname').val(@Model.LastName);
            }
            
        });

        $("#chkCitizenship").click(function () {
            if ($("#chkCitizenship").is(':checked')) {
                $("#SAIdNumber").show();
                $("#PassportNumber").hide();
                $("#passportnumber").val("");
            } else {
                $("#SAIdNumber").hide();
                $("#PassportNumber").show();
                $("#idnumber").val("");
            }
        });

        $('#firstname').focusout(function () {
            if ($('#firstname').val().length < 2) {
                ShowAlert("error", "First name must be longer than 2 characters", "First name Error");
                $('#firstname').addClass('input.input-validation-error');
                //$('#firstname').focus();
            }
            else if ($('#lastname').val().length > 2) {
                $('#firstname').removeClass('input.input-validation-error');
                AjaxCall('@Url.Action("GetUsername")', setGeneratedUsernane, error, { 'firstName': $('#firstname').val(), 'lastName': $('#lastname').val() }, 'GET');
            }
            else {
                $('#firstname').removeClass('input.input-validation-error');
            }
        });

    $('#lastname').focusout(function () {
        if ($('#lastname').val().length < 2) {
            ShowAlert("error", "Last name must be longer than 2 characters", "Last name Error");
            $('#lastname').addClass('input.input-validation-error');
            //if ($('#firstname').val().length < 2) {
            //    $('#firstname').focus();
            //} else $('#lastname').focus();
        } else {
            $('#lastname').removeClass('input.input-validation-error');
            AjaxCall('@Url.Action("GetUsername")', setGeneratedUsernane, error, { 'firstName': $('#firstname').val(), 'lastName': $('#lastname').val() }, 'GET');
            }
    });

        $("#IsAdmin").click(function () {
            $("#IsApprover").attr("checked", false);
            $("#IsFinanceReviewer").attr("checked", false);
            $("#IsDataCapture").attr("checked", false);
        });

        $("#IsApprover").click(function () {
            $("#IsAdmin").attr("checked", false);
            $("#IsFinanceReviewer").attr("checked", false);
            $("#IsDataCapture").attr("checked", false);
        });

        $("#IsFinanceReviewer").click(function () {
            $("#IsAdmin").attr("checked", false);
            $("#IsApprover").attr("checked", false);
            $("#IsDataCapture").attr("checked", false);
        });

        $("#IsDataCapture").click(function () {
            $("#IsAdmin").attr("checked", false);
            $("#IsApprover").attr("checked", false);
            $("#IsFinanceReviewer").attr("checked", false);
        });

        function setGeneratedUsernane(data) {
            var generatedUserName = data;
            $('#username').val(generatedUserName);
        }

        function error() {

        }

        $(function () {

        });

        $(".bt_red").easyconfirm({ locale: { title: 'Confirm ', button: ['No', 'Yes'], text: 'Head Office user record is not yet Saved. Do you want to continue?' } });

</script>
