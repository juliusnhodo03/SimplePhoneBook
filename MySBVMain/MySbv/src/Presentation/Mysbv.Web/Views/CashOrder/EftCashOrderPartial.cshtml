@using Application.Dto.CashOrder
@model Application.Dto.CashOrder.CashOrderDto


<link href="~/Content/KendoUI/kendo.default.min.css" rel="stylesheet" />
<link href="~/Content/KendoUI/kendo.common.min.css" rel="stylesheet" />
<script src="~/Scripts/CashOrdering.Screen.Layout.js"> </script>
<script src="~/Scripts/CashOrdering.Model.js"></script>
<script src="~/Scripts/KendoUI/kendo.aspnetmvc.min.js"></script>
<script src="~/Scripts/KendoUI/kendo.web.min.js"></script>


<div class="well" id="CashOrderContainer" style="background: #fff;">

	@using (Html.BeginForm())
	{
		@Html.AntiForgeryToken()

		var index = 0;

		var notesRequiredTotal = 0M;
		var coinsRequiredTotal = 0M;

		var notesForwardedTotal = 0M;
		var coinsForwardedTotal = 0M;

		var cashRequiredDrop = Model.CashOrderContainer.CashOrderContainerDrops.FirstOrDefault(d => d.IsCashRequiredInExchange);
		var cashForwardedDrop = Model.CashOrderContainer.CashOrderContainerDrops.FirstOrDefault(d => d.IsCashForwardedForExchange);


		@Html.HiddenFor(model => model.CashOrderId, new { id = "hdCashOrderId" })
		@Html.HiddenFor(model => model.ReferenceNumber, new { id = "hdTransactionReferenceNumber" })
		@Html.HiddenFor(model => model.CreatedById, new { id = "hdCreatedById" })
		@Html.HiddenFor(model => model.CreateDate, new { id = "hdCreatedDate" })
		@Html.HiddenFor(model => model.InitialCitSerialNumber, new { id = "hdInitialCitSerialNumber" })
		@Html.HiddenFor(model => model.EmptyContainerOrBagNumber, new { id = "EmptyContainerOrBagNumber" })

		<h5>Cash Order Information</h5>
		<div class="devideHorSeparator"></div>


		<div class="row">
			<div class="span3">
				@Html.LabelFor(model => model.CashOrderAmount, new { @class = "label", style = "width: 230px" })
			</div>

			<div class="span2">
				@Html.TextBoxFor(model => model.CashOrderAmount, new { id = "CashOrderAmount", @disabled = "disabled", @style = "width:210px; margin-bottom: 8px;  margin-left:10px;" })
			</div>

			<div class="span2 offset1">
				@Html.LabelFor(model => model.CashOrderTypeId, new { @class = "label", style = "width: 180px; margin-left:30px;" })
			</div>

			<div class="span1 offset1">
				@Html.TextBoxFor(model => model.CashOrderType.Name, new { @disabled = "disabled", @style = "width: 185px; margin-left:-10px;" })
			</div>
		</div>



		<div class="row">
			<div class="span3">
				@Html.LabelFor(model => model.MerchantId, new { @class = "label", style = "width: 230px" })
			</div>

			<div class="span2">
				@Html.TextBoxFor(model => model.MerchantName, new { @disabled = "disabled", @style = "width:210px; margin-bottom: 8px;  margin-left:10px;" })
			</div>

			<div class="span2 offset1">
				@Html.LabelFor(model => model.ReferenceNumber, new { @class = "label", style = "width: 180px; margin-left:30px;" })
			</div>

			<div class="span1 offset1">
				@Html.TextBoxFor(model => model.ReferenceNumber, new { @disabled = "disabled", @style = "width: 185px; margin-left:-10px;" })
			</div>
		</div>



		<div class="row">
			<div class="span3">
				@Html.LabelFor(model => model.SiteId, new { @class = "label", style = "width: 230px" })
			</div>

			<div class="span2">
				@Html.TextBoxFor(model => model.SiteName, new { @disabled = "disabled", @style = "width:210px; margin-bottom: 8px;  margin-left:10px;" })
			</div>

			<div class="span2 offset1">
				@Html.LabelFor(model => model.OrderDate, new { @class = "label", style = "width: 180px; margin-left:30px;" })
			</div>

			<div class="span1 offset1">
				@Html.TextBoxFor(model => model.OrderDateString, new { @disabled = "disabled", @style = "width: 185px; margin-left:-10px;" })
				@Html.HiddenFor(model => model.OrderDate, new { @disabled = "disabled", @style = "width: 175px;  margin-left:-50px;" })
			</div>
		</div>



		<div class="row">
			<div class="span3">
				<span class="label" style="width: 230px">Bag Number with cash for Exchange</span>
			</div>

			<div class="span2">
				@Html.TextBoxFor(model => model.ContainerNumberWithCashForExchange, new { id = "ContainerNumberWithCashForExchange", @disabled = "disabled", @style = "width:210px; margin-bottom: 8px;  margin-left:10px;" })
			</div>

			<div class="span2 offset1">
				@Html.LabelFor(model => model.DeliveryDate, new { @class = "label", style = "width: 180px; margin-left:30px;" })
			</div>

			<div class="span1 offset1">
				@Html.TextBoxFor(model => model.DeliveryDate, new { @disabled = "disabled", @style = "width: 185px; margin-left:-10px;" })
			</div>
		</div>


		<h5>Container Information</h5>

		<div class="not-processed">
			<p>@Model.ContainerNumberWithCashForExchange</p>
		</div>

		<div class="devideHorSeparator"></div>


		@Html.HiddenFor(model => model.CashOrderContainer.CreateDate, new { id = "CreateDate", name = "CreateDate" })
		@Html.HiddenFor(model => model.CashOrderContainer.CreatedById, new { id = "CreatedById", name = "CreatedById" })

		<div class="cashCenterView">
			@Html.Hidden("hdCashOrderContainerId", Model.CashOrderContainer.CashOrderContainerId, new { id = "hdCashOrderContainerId" })
			<table>
				<tr>
					<td class="CashPacked" style="text-align: center">
						@Html.Hidden("hdContainerDropId", Model.CashOrderContainer.CashOrderContainerDrops.FirstOrDefault(e => e.IsCashRequiredInExchange).CashOrderContainerDropId, new { id = "hdContainerDropId", name = "hdContainerDropId" })
						<div class="CashRequiredContainerDrop" style="text-align: left">
							<table class="k-limit">
								<tr>
									<td>
										<!--Cash order and Packing-->

										<div class="CenterHeader">
											Cash order and Packing
										</div>

										<div class="border1px">
											<table class="denominations">
												<tr>
													<td style="text-align: center;" colspan="2" class="bold OrangeShade">Cash Ordered</td>
													<td class="bold"></td>
													<td style="text-align: center;" colspan="2" class="bold GreenShade">Cash Packed</td>
												</tr>
												<tr>
													<td class="OrangeShade">Count</td>
													<td class="OrangeShade">Value</td>
													<td class="denomination-width">Denomination</td>
													<td class="GreenShade">Value</td>
													<td class="GreenShade">Count</td>
												</tr>

												@{
													var coinsTotal = 0M;

													var notesTotal = 0M;
													var totalOrdered = 0M;
													var count = "";
													var value = "";
													var valueInCents = "";
												}

												@foreach (var item in ViewBag.CashRequiredNoteDenominations)
												{
													notesTotal += item.Value;
													totalOrdered += item.Value;
													count = item.Count.ToString();
													value = item.Value.ToString();
													valueInCents = item.ValueInCents.ToString();
													string cashOrderContainerDropItemId = item.CashOrderContainerDropItemId.ToString();

													<tr class="notesClass">
														<td class="OrangeShade">
															@Html.TextBox("textNoteCountSubmitted", count, new { @readonly = "readonly", @class = "textbox-count-orange" })
															@Html.Hidden("hdContainerDropItemId", cashOrderContainerDropItemId, new { id = "hdContainerDropItemId", name = "hdContainerDropItemId" })
														</td>
														<td class="OrangeShade">
															@Html.TextBox("textNoteValueSubmitted", value, new { @readonly = "readonly", @class = "textbox-orange" })
														</td>
														<td class="denomination-width">
															@item.DenominationName
															@Html.Hidden("hdValueInCents", valueInCents, new { id = "hdValueInCents" })
														</td>
														<td class="GreenShade">
															@Html.TextBox("textValue", "", new { @class = "textValue textbox-green" })
														</td>
														<td class="GreenShade">
															@Html.TextBox("textCount", "", new { @class = "textCount textbox-count-green" })
														</td>
													</tr>
												}


												<tr>
													<td class="OrangeShade"></td>
													<td class="OrangeShade" id="NotesOrderedSubTotal">@ViewBag.NotesRequiredSubTotal</td>
													<td class="denomination-width">Sub Total</td>
													<td class="GreenShade" id="NotesPackedSubTotal">0.00</td>
													<td class="GreenShade"></td>
												</tr>


												@foreach (var item in ViewBag.CashRequiredCoinDenominations)
												{
													coinsTotal += item.Value;
													totalOrdered += item.Value;
													count = item.Count.ToString();
													value = item.Value.ToString();
													valueInCents = item.ValueInCents.ToString();
													string cashOrderContainerDropItemId = item.CashOrderContainerDropItemId.ToString();

													<tr class="coinsClass">
														<td class="OrangeShade">
															@Html.TextBox("textCoinCountSubmitted", count, new { @readonly = "readonly", @class = "textbox-count-orange" })
															@Html.Hidden("hdContainerDropItemId", cashOrderContainerDropItemId, new { id = "hdContainerDropItemId", name = "hdContainerDropItemId" })
														</td>
														<td class="OrangeShade">
															@Html.TextBox("textCoinValueSubmitted", value, new { @readonly = "readonly", @class = "textbox-orange" })
														</td>
														<td class="denomination-width">
															@item.DenominationName
															@Html.Hidden("hdValueInCents", valueInCents, new { id = "hdValueInCents" })
														</td>
														<td class="GreenShade">
															@Html.TextBox("textValue", "", new { @class = "textValue textbox-green" })
														</td>
														<td class="GreenShade">
															@Html.TextBox("textCount", "", new { @class = "textCount textbox-count-green" })
														</td>
													</tr>
												}

												<tr>
													<td class="OrangeShade"></td>
													<td class="OrangeShade" id="CoinsOrderedSubTotal">@ViewBag.CoinsRequiredSubTotal</td>
													<td class="denomination-width">Sub Total</td>
													<td class="GreenShade" id="CoinsPackededSubTotal">0.00</td>
													<td class="GreenShade"></td>
												</tr>


												<tr>
													<td align="right" id="OrderedGrandTotal" colspan="2">@totalOrdered</td>
													<td class="denomination-width">Total</td>
													<td class="left" id="PackedGrandTotal" colspan="2">0.00</td>
												</tr>

												<tr>
													<td colspan="2"></td>
													<td class="denomination-width">Difference</td>
													<td id="PackedGrandTotalsDifference" colspan="2">@totalOrdered</td>
												</tr>

											</table>
										</div>
									</td>
								</tr>
							</table>



						</div>

					</td>
				</tr>
			</table>

			<div style="height: 10px;"></div>

			<!-- Buttons -->
			<table>
				<tr>
					<td style="width: 95%"></td>
					<td><button name="btnComplete" class="btn btn-mini btn btn-success bold" type="button">Complete</button></td>
					<td></td>
					<td><button onclick="exitOrder()" class="btn btn-mini btn-danger bold" type="button">Cancel</button></td>
				</tr>
			</table>


		</div>
	}
</div>







<script id="ValidationWindow" type="text/x-kendo-template">
	<div style="margin-left:20px;">
		<span class="headerTitle" />
		<span style="margin-left:5px;" class="confirmation-message"></span>
	</div>

	<div style="margin-left:160px; margin-top:5px;">
		<button id="btnConfirmCancel" class="no-cancel k-button" style="width:80px">Ok</button>
	</div>
</script>


<script id="ConfirmWindow" type="text/x-kendo-template">
	<div style="margin-left:20px;">
		<img src="@Url.Content("~/Content/Images/question.png")" style="float:left" />
		<br />
		<p style="margin-left:5px;" class="confirmation-message"></p>
	</div>

	<div style="margin-left:160px; margin-top:5px;">
		<button id="btnConfirmCancel" class="confirm-cancel k-button" style="width:80px">Yes</button>
		<button id="btnNoCancel" class="no-cancel k-button" style="width:80px">No</button>
	</div>
</script>


<script id="DeleteContainermWindow" type="text/x-kendo-template">
	<div style="margin-left:20px;">
		<img src="@Url.Content("~/Content/Images/question.png")" style="float:left" />
		<br />
		<p style="margin-left:5px;" class="confirmation-message"></p>
	</div>

	<div style="margin-left:160px; margin-top:5px;">
		<button id="btnConfirmCancel" class="confirm-cancel k-button" style="width:80px">Yes</button>
		<button id="btnNoCancel" class="no-cancel k-button" style="width:80px">No</button>
	</div>
</script>


<script id="loadingWindow" type="text/x-kendo-template">
	<div style="margin-left:20px; margin-top:30px;">
		<table>
			<tr>
				<td><img src="@Url.Content("~/Content/Images/loading.gif")" /></td>
				<td style="width:10px;"></td>
				<td><span class="confirmation-message"></span></td>
			</tr>
		</table>
	</div>

	<div style="margin-left:160px; margin-top:5px;">
		<button id="btnConfirmCancel" class="confirm-cancel" style="width:80px; visibility:hidden">Yes</button>
	</div>
</script>



<script id="MessageWindow" type="text/x-kendo-template">
	<div style="margin-left:20px;">
		<img src="@Url.Content("~/Content/Images/infoimg.jpg")" class="imager" style="float:left" />
		<br />
		<p style="margin-left:5px;" class="confirmation-message"></p>
	</div>

	<div style="margin-left:160px; margin-top:15px;">
		<button id="btnConfirmCancel" class="confirm-cancel k-button" style="width:80px">Ok</button>
	</div>
</script>


