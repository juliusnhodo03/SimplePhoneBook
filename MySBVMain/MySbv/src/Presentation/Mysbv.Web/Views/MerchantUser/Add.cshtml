@model Application.Dto.Users.MerchantUserDto

@using System.Web.Optimization
@using Kendo.Mvc.UI
@{
    ViewBag.Title = "Add Merchant User";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style type="text/css">
    .label {
        width: 100px !important;
    }

    .required:after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>

<div class="well">


    <p>Fields marked with an asterisk <span class="requiredField">*</span> are required</p>


    @using (Html.BeginForm())
    {
        @Html.ValidationSummary()


        <div class="ui-widget-header">
            <h3 style="margin-left: 5px">Create Merchant User Account</h3>

        </div>

        <div class="ui-widget-content" style="padding: 5px;">

            <div class="row">
                <div class="span">
                    <h4>User Information</h4>
                </div>
                <div class="span3 offset4">
                    <h4>Login Information</h4>
                </div>

            </div>
            <div class="row">
                <div>

                    <div class="span2">
                        @Html.LabelFor(a => a.UserDto.TitleId, new { @class = "label required", style = "width: 150px !Important" })
                    </div>
                    <div class="span2">

                        @(Html.Kendo().DropDownListFor(a => a.UserDto.TitleId).BindTo(ViewData["Titles"] as SelectList).HtmlAttributes(new { @style = "width:243px; margin-bottom: 8px ", @tabindex = "1" }))
                    </div>
                    
                    <div class="input-prepend">
                        <div class="span2 offset2">
                            @Html.LabelFor(a => a.UserDto.UserName, new { @class = "label required", style = "width: 150px !Important" })
                        </div>

                        <div class="span2">

                            @Html.TextBoxFor(a => a.UserDto.UserName, new { @class = "tbstyle", @id = "username", @maxlength = "14" })
                            @Html.ValidationMessageFor(m => m.UserDto.UserName)
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">

                <div class="span2">
                    @Html.LabelFor(a => a.UserDto.FirstName, new { @class = "label required", style = "width: 150px !important" })
                </div>
                <div class="input-prepend">
                    <div class="span2">

                        @Html.TextBoxFor(a => a.UserDto.FirstName, new { @class = "tbstyle", @id = "firstname", @maxlength = "14", @tabindex = "2" })
                        @Html.ValidationMessageFor(a => a.UserDto.FirstName)
                    </div>

                    <div class="span2 offset2">
                        @Html.LabelFor(a => a.UserDto.EmailAddress, new { @class = "label required", style = "width: 150px !important" })
                    </div>

                    <div class="span2">
                        @Html.TextBoxFor(a => a.UserDto.EmailAddress, new { @maxlength = "50", @tabindex = "10" })
                        @Html.ValidationMessageFor(m => m.UserDto.EmailAddress)
                    </div>
                </div>
            </div>
            <div class="row">

                <div class="span2">
                    @Html.LabelFor(a => a.UserDto.LastName, new { @class = "label required", style = "width: 150px !important" })
                </div>
                <div class="input-prepend">
                    <div class="span2">

                        @Html.TextBoxFor(a => a.UserDto.LastName, new { @class = "tbstyle", @id = "lastname", @maxlength = "14", @tabindex = "3" })
                        @Html.ValidationMessageFor(a => a.UserDto.LastName)
                    </div>

                    <div class="span2 offset2">
                        @Html.LabelFor(a => a.UserDto.Password, new { @class = "label required", style = "width: 150px !important" })
                    </div>

                    <div class="span2">
                        @Html.PasswordFor(a => a.UserDto.Password, new { @maxlength = "20", @class = "tbstyle", @tabindex = "11" })
                        @Html.ValidationMessageFor(m => m.UserDto.Password)
                    </div>
                </div>
            </div>
            <div class="row">

                <div class="span2">
                    <span class="label" style="width: 150px !Important"> SA Citizen ?</span>
                </div>
                <div class="span2">
                    <span style="width :150px ; margin-right:5px;"></span>
                    <input type="checkbox" tabindex="4" checked="checked" id="chkCitizenship" />
                </div>

                <div class="span2 offset2">
                    @Html.LabelFor(a => a.UserDto.ConfirmPassword, new { @class = "label required", style = "width: 150px !important" })
                </div>
                <div class="input-prepend">
                    <div class="span2">
                        @Html.PasswordFor(a => a.UserDto.ConfirmPassword, new { @maxlength = "20", @class = "tbstyle", @tabindex = "12" })
                        @Html.ValidationMessageFor(m => m.UserDto.ConfirmPassword)
                    </div>
                </div>
            </div>
            <div class="row" id="PassportNumber">

                <div class="span2">
                    @Html.LabelFor(a => a.UserDto.PassportNumber, new { @class = "label required", style = "width: 150px !important" })
                </div>
                <div class="input-prepend">
                    <div class="span2">
                        @Html.TextBoxFor(a => a.UserDto.PassportNumber, new { @class = "tbstyle", @id = "passportnumber", @maxlength = "20", @tabindex = "5" })
                        @Html.ValidationMessageFor(a => a.UserDto.PassportNumber)
                    </div>
                </div>
                <div class="span3 offset2">
                    <h4>Merchant Information</h4>
                </div>

            </div>
            <div class="row" id="SAIdNumber">

                <div class="span2">
                    @Html.LabelFor(a => a.UserDto.IdNumber, new { @class = "label required", style = "width: 150px !important" })
                </div>
                <div class="input-prepend">
                    <div class="span2">
                        @Html.TextBoxFor(a => a.UserDto.IdNumber, new { @class = "tbstyle", @id = "idnumber", @maxlength = "13", @tabindex = "5" })
                        @Html.ValidationMessageFor(a => a.UserDto.IdNumber)
                    </div>
                    <div class="span3 offset2">
                        <h4>Merchant Information</h4>
                    </div>
                </div>
            </div>
            <div class="row">
                <div>
                    <div class="input-prepend">
                        <div class="span2">
                            @Html.LabelFor(a => a.UserDto.CellNumber, new { @class = "label required", style = "width: 150px !Important" })
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(a => a.UserDto.CellNumber, new { @class = "tbstyle", @id = "idnumber", @maxlength = "10", @tabindex = "6" })
                            @Html.ValidationMessageFor(a => a.UserDto.CellNumber)
                        </div>
                    </div>
                        <div class="span2 offset2">
                            @Html.LabelFor(a => a.MerchantId, new { @class = "label required", style = "width: 150px !Important" })
                        </div>
                        <div class="span2">
                            @(Html.Kendo().DropDownListFor(a => a.MerchantId).BindTo(ViewData["Merchants"] as SelectList).HtmlAttributes(new { @style = "width:238px; margin-bottom: 8px", @tabindex = "13", id = "ddMerchant" }).Events(e => e.Select("select")))
                        </div>
                    </div>
            </div>
            <div class="row">
                <div>
                    <div class="input-prepend">
                        <div class="span2">
                            @Html.LabelFor(a => a.UserDto.OfficeNumber, new { @class = "label required", style = "width: 150px !Important" })
                        </div>
                        <div class="span2">
                            @Html.TextBoxFor(a => a.UserDto.OfficeNumber, new { @class = "tbstyle", @maxlength = "10", @tabindex = "7" })
                            @Html.ValidationMessageFor(a => a.UserDto.OfficeNumber)
                        </div>
                    </div>

                    <div class="span2 offset2">

                        @Html.LabelFor(a => a.SiteIds, new { @class = "label required", style = "width: 150px !Important" })
                    </div>
                    <div class="span2">
                        @(Html.Kendo().MultiSelectFor(a => a.SiteIds)
                              .DataTextField("Name")
                              .DataValueField("Id")
                              .Filter(FilterType.StartsWith)
                              .DataSource(source =>
                              {
                                  source.Read(read =>
                                  {
                                      read.Action("GetSites", "MerchantUser").Data("GetMerchant");
                                  }).ServerFiltering(false);
                              })
                              .HighlightFirst(true)
                              .Placeholder("Click to Select Sites")
                              .HtmlAttributes(new { @style = "width:238px; margin-bottom: 8px", @tabindex = "14", id = "ddSites" }))
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="input-prepend">
                    <div class="span2">
                        @Html.LabelFor(a => a.UserDto.FaxNumber, new { @class = "add-on", style = "width: 150px" })
                    </div>
                    <div class="span2">
                        @Html.TextBoxFor(a => a.UserDto.FaxNumber, new { @class = "tbstyle", @maxlength = "10", @tabindex = "8" })
                        @Html.ValidationMessageFor(a => a.UserDto.FaxNumber)
                    </div>
                    <div class="span2 offset2">
                        @Html.LabelFor(a => a.UserDto.CanMakeVaultPayment, new { @class = "add-on", style = "width: 150px" })
                    </div>
                    <div class="span2">
                        <span style="width :150px ; margin-right:5px;"></span>
                        @Html.CheckBoxFor(a => a.UserDto.CanMakeVaultPayment, new { id = "CanMakeVaultPayment", @class = "chkbxstyle", @tabindex = "9" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="input-prepend">
                    <div class="span2">
                        @Html.LabelFor(a => a.UserDto.IsLocked, new { @class = "add-on", style = "width: 150px" })
                </div>
                    <div class="span2">
                        <span style="width :150px ; margin-right:5px;"></span>
                        @Html.CheckBoxFor(a => a.UserDto.IsLocked, new { @class = "chkbxstyle", @tabindex = "9" })
                        @Html.ValidationMessageFor(a => a.UserDto.IsLocked)
                    </div>

                </div>
            </div>
            <hr />
            <div class="row">
                <div class="span">
                    <h4>Role Information</h4>
                </div>
                <div class="span3 offset4">
                    <h4>Notification Type</h4>
                </div>
            </div>
            <div class="row">
                <div class="span">
                    <h5>User must have at least 1 role <span class="requiredField">*</span></h5>
                </div>
                <div class="span4 offset3">
                    <h5>User must have at least 1 notification <span class="requiredField">*</span></h5>
                </div>
            </div>
            <div class="row">
                <div class="span1">
                    @Html.LabelFor(model => model.UserDto.IsUser)
                </div>
                <div class="span1">
                    @Html.LabelFor(model => model.UserDto.IsViewer)
                </div>
                <div class="span1">
                    @Html.LabelFor(model => model.UserDto.IsSupervisor)
                </div>
                <div class="span4 offset3">
                    <div class="span1">
                        @Html.LabelFor(a => a.IsSmsNotificationType)
                    </div>
                    <div class="span1">
                        @Html.LabelFor(a => a.IsFaxNotificationType)
                    </div>
                    <div class="span1">
                        @Html.LabelFor(a => a.IsEmailNotificationType)
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="span1">
                    @Html.CheckBoxFor(model => model.UserDto.IsUser, new { id = "IsUser", @style = "margin-top: -14px", @tabindex = "15" })
                </div>
                <div class="span1">
                    @Html.CheckBoxFor(model => model.UserDto.IsViewer, new { id = "IsViewer", @style = "margin-top: -14px", @tabindex = "16" })
                </div>
                <div class="span1">
                    @Html.CheckBoxFor(model => model.UserDto.IsSupervisor, new { id = "IsSupervisor", @style = "margin-top: -14px", @tabindex = "17" })
                </div>
                <div class="span4 offset3">
                    <div class="span1">
                        @Html.CheckBoxFor(a => a.IsSmsNotificationType, new {  @style = "margin-top: -14px", @tabindex = "18" })
                    </div>
                    <div class="span1">
                        @Html.CheckBoxFor(a => a.IsFaxNotificationType, new { @style = "margin-top: -14px", @tabindex = "19" })
                    </div>
                    <div class="span1">
                        @Html.CheckBoxFor(a => a.IsEmailNotificationType, new { @style = "margin-top: -14px", @tabindex = "20" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div style="margin-left: 33px">
                    <div class="span2 offset8">
                        <input type="submit" value="Save" class="btn btn-primary" style="width: 100px" tabindex="20" />
                    </div>
                    <div class="span1">
                        <a href='@Url.Action("Index")' id="confirm" class="btn btn-danger" style="width: 70px; margin-left: -45px">Cancel</a>
                    </div>
                </div>
            </div>

        </div>


        <!--end-->

    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

    <script type="text/javascript">

        $(document).ready(function () {
          
            if ($.trim($('#passportnumber').val()) != "") {
                $("#SAIdNumber").hide();
                $("#PassportNumber").show();
                $("#chkCitizenship").removeAttr('checked');
            } else {
                $("#SAIdNumber").show();
                $("#PassportNumber").hide();
            }

            var lastname = $('#lastname').val(@Model.UserDto.LastName);

            if (lastname == "") {
                $('#lastname').val(' ');
            } else {
                $('#lastname').val(@Model.UserDto.LastName);
            }


        });

        function GetMerchant() {
            return { merchant: $("#ddMerchant").val() };
        }

        function select(e) {
            var dropdownlist = $("#ddMerchant").data("kendoDropDownList");
            dropdownlist.select(e.item.index());
            var multiselect = $("#ddSites").data("kendoMultiSelect");
            multiselect.value([]);
            multiselect.dataSource.read();
        };

        $("#chkCitizenship").click(function () {
            if ($("#chkCitizenship").is(':checked')) {
                $("#SAIdNumber").show();
                $("#PassportNumber").hide();
                $("#passportnumber").val("");
            } else {
                $("#SAIdNumber").hide();
                $("#PassportNumber").show();
                $("#idnumber").val("");
            }
        });

        $('#firstname').focusout(function () {
            if ($('#firstname').val().length < 2) {
                ShowAlert("error", "First name must be longer than 2 characters", "First name Error");
                $('#firstname').addClass('input.input-validation-error');
                //$('#firstname').focus();
            }
            else if ($('#lastname').val().length > 2) {
                $('#firstname').removeClass('input.input-validation-error');
                AjaxCall('@Url.Action("GetUsername")', setGeneratedUsernane, error, { 'firstName': $('#firstname').val(), 'lastName': $('#lastname').val() }, 'GET');
            }
            else {
                $('#firstname').removeClass('input.input-validation-error');
            }
        });

        $('#lastname').focusout(function () {
            if ($('#lastname').val().length < 2) {
                ShowAlert("error", "Last name must be longer than 2 characters", "Last name Error");
                $('#lastname').addClass('input.input-validation-error');
                //if ($('#firstname').val().length < 2) {
                //    $('#firstname').focus();
                //} else $('#lastname').focus();
            } else {
                $('#lastname').removeClass('input.input-validation-error');
                AjaxCall('@Url.Action("GetUsername")', setGeneratedUsernane, error, { 'firstName': $('#firstname').val(), 'lastName': $('#lastname').val() }, 'GET');
            }
        });

        function setGeneratedUsernane(data) {
            var generatedUserName = data;
            $('#username').val(generatedUserName);
        }

        function error() {

        }

        $("#IsUser").click(function () {
            $("#IsViewer").attr("checked", false);
            $("#IsSupervisor").attr("checked", false);
            $("#CanMakeVaultPayment").attr("checked", false);
            $("#CanMakeVaultPayment").prop("disabled", true);
        });

        $("#IsViewer").click(function () {
            $("#IsUser").attr("checked", false);
            $("#IsSupervisor").attr("checked", false);
            $("#CanMakeVaultPayment").attr("checked", false);
            $("#CanMakeVaultPayment").prop("disabled", true);
        });

        $("#IsSupervisor").click(function () {
            $("#IsViewer").attr("checked", false);
            $("#IsUser").attr("checked", false);
        });

        //ON REFRESH
        if ($("#IsSupervisor").is(':checked')) {
            $("#CanMakeVaultPayment").prop("disabled", false);
        } else {
            $("#CanMakeVaultPayment").attr("checked", false);
            $("#CanMakeVaultPayment").prop("disabled", true);
        }

        $("#IsSupervisor").change(function () {
           
            if ($(this).is(':checked')) {
                $("#CanMakeVaultPayment").prop("disabled", false);
            } else {
                $("#CanMakeVaultPayment").attr("checked", false);
                $("#CanMakeVaultPayment").prop("disabled", true);
            }
        });

        $(".bt_red").easyconfirm({ locale: { title: 'Confirm ', button: ['No', 'Yes'], text: 'Merchant user record is not yet Saved. Do you want to continue?' } });

    </script>

</div>