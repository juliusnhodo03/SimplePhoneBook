@model Application.Dto.Profile.UserProfileDto

@using System.Web.Optimization
@using Kendo.Mvc.UI

<style type="text/css">
    .label {
        width: 100px !important;
    }

    .required:after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>

<p>Fields marked with an asterisk <span class="requiredField">*</span> are required</p>

<div class="ui-widget-header">
    <h4 style="margin-left: 5px">Merchant User</h4>
</div>

@using (Html.BeginForm())
{
    @Html.ValidationSummary()

    var arr = new string[@Model.SiteIds.Count];
    for (int i = 0; i < Model.SiteIds.Count(); i++)
    {
        arr[i] = Model.SiteIds[i].ToString();
    }

    <div class="row">
        <div class="span">
            <h4>User information</h4>
        </div>
        <div class="span3 offset4">
            <h4>Loging Information</h4>
        </div>
    </div>

    <div class="row">
        <div class="span2">
            @Html.LabelFor(a => a.TitleId, new { @class = "label required", style = "width: 150px !Important" })
        </div>
        <div class="span2">
            @(Html.Kendo().DropDownListFor(a => a.TitleId).BindTo(ViewData["Titles"] as SelectList).HtmlAttributes(new { @style = "width:243px; margin-bottom: 8px", @tabindex = "1" }))
        </div>

        <div class="span2 offset2">
            @Html.LabelFor(a => a.UserName, new { @class = "label required", style = "width: 150px !Important" })
        </div>
        <div class="span2">
            @Html.TextBoxFor(a => a.UserName, new { @readonly = "readonly", @class = "tbstyle", @id = "username", @maxlength = "14" })
            @Html.ValidationMessageFor(m => m.UserName)
        </div>
    </div>

    <div class="row">
        <div class="span2">
            @Html.LabelFor(a => a.FirstName, new { @class = "label required", style = "width: 150px !important" })
        </div>
        <div class="span2">
            @Html.TextBoxFor(a => a.FirstName, new { @class = "tbstyle", @id = "firstname", @maxlength = "14", @tabindex = "2" })
            @Html.ValidationMessageFor(a => a.FirstName)
        </div>
        <div class="span2 offset2">

            @Html.LabelFor(a => a.EmailAddress, new { @class = "label required", style = "width: 150px !important" })
        </div>
        <div class="span2">
            @Html.TextBoxFor(a => a.EmailAddress, new { @maxlength = "50", @tabindex = "10" })
            @Html.ValidationMessageFor(m => m.EmailAddress)
        </div>
    </div>

    <div class="row">
        <div class="span2">
            @Html.LabelFor(a => a.LastName, new { @class = "label required", style = "width: 150px !important" })
        </div>
        <div class="span2">
            @Html.TextBoxFor(a => a.LastName, new { @class = "tbstyle", @id = "lastname", @maxlength = "14", @tabindex = "3" })
            @Html.ValidationMessageFor(a => a.LastName)
        </div>

        <div class="span2 offset2"></div>
        <div class="span2">
            <a href="javascript:displayResetForm();" class="btn btn-default" style="width: 220px">Reset Password</a>
        </div>
    </div>

    <div class="row" id="PassportNumber">
        <div class="span2">
            @Html.LabelFor(a => a.PassportNumber, new { @class = "label required", style = "width: 150px !important; margin-bottom:5px;" })

        </div>
        <div class="input-prepend">
            <div class="span2">
                @Html.TextBoxFor(a => a.PassportNumber, new { @readonly = "readonly", @class = "tbstyle", @id = "passportnumber", @maxlength = "20", @tabindex = "5" })
                @Html.ValidationMessageFor(a => a.PassportNumber)
            </div>
        </div>

    </div>

    <div class="row" id="SAIdNumber">
        <div class="span2">
            @Html.LabelFor(a => a.IdNumber, new { @class = "label required", style = "width: 150px !important; margin-bottom:5px;" })

        </div>
        <div class="input-prepend">
            <div class="span2">
                @Html.TextBoxFor(a => a.IdNumber, new { @readonly = "readonly", @class = "tbstyle", @id = "passportnumber", @maxlength = "20", @tabindex = "5" })
                @Html.ValidationMessageFor(a => a.IdNumber)
            </div>
        </div>
        <div class="span3 offset2">
            <h4>Merchant Information</h4>
        </div>
    </div>

    <div class="row">
        <div class="span2">
            @Html.LabelFor(a => a.CellNumber, new { @class = "label required", style = "width: 150px !Important" })
        </div>
        <div class="span2">
            @Html.TextBoxFor(a => a.CellNumber, new { @class = "tbstyle", @maxlength = "10", @tabindex = "6" })
            @Html.ValidationMessageFor(a => a.CellNumber)
        </div>
        <div class="span2 offset2">
            @Html.LabelFor(a => a.MerchantId, new { @class = "label required", style = "width: 150px !Important" })
        </div>
        <div class="span2">
            @(Html.Kendo().DropDownListFor(a => a.MerchantId).BindTo(ViewData["Merchants"] as SelectList).HtmlAttributes(new { @readonly = "readonly", @style = "width:238px; margin-bottom: 8px", @tabindex = "12", id = "ddMerchant" }).Events(e => e.Select("select")))
        </div>
    </div>

    <div class="row">
        <div class="span2">
            @Html.LabelFor(a => a.OfficeNumber, new { @class = "label required", style = "width: 150px !Important" })
        </div>
        <div class="span2">
            @Html.TextBoxFor(a => a.OfficeNumber, new { @class = "tbstyle", @maxlength = "10", @tabindex = "7" })
            @Html.ValidationMessageFor(a => a.OfficeNumber)
        </div>
        <div class="span2 offset2">
            @Html.LabelFor(a => a.SiteIds, new { @class = "label required", style = "width: 150px !Important" })
        </div>
        <div class="span2">
            @(Html.Kendo()
                      .MultiSelectFor(a => a.SiteIds)
                      .DataTextField("Name")
                      .DataValueField("Id")
                      .HighlightFirst(true)
                      .Filter("startswith")
                      .Placeholder("Click to Select Sites")
                      .DataSource(source =>
                      {
                          source.Read(read =>
                          {
                              read.Action("GetSites", "MerchantUser").Data("GetMerchant");
                          }).ServerFiltering(false);
                      })
                      .HtmlAttributes(new { @readonly = "readonly", @style = "width:238px; margin-bottom: 8px", id = "ddSites" })
                      .Value(arr))
        </div>
    </div>

    <div class="row">
        <div class="span2">
            @Html.LabelFor(a => a.FaxNumber, new { @class = "label", style = "width: 150px !Important" })
        </div>
        <div class="span2">
            @Html.TextBoxFor(a => a.FaxNumber, new { @class = "tbstyle", @maxlength = "10", @tabindex = "8" })
            @Html.ValidationMessageFor(a => a.FaxNumber)
        </div>
    </div>

    <hr />

    <div class="row">
        <div class="span">
            <h4>Role Information</h4>
        </div>
        <div class="span3 offset4">
            <h4>Notification Type</h4>
        </div>
    </div>

    <div class="row">
        <div class="span">
            <h5>User must have at least 1 role <span class="requiredField">*</span></h5>
        </div>
        <div class="span4 offset3">
            <h5>User must have at least 1 notification <span class="requiredField">*</span></h5>
        </div>
    </div>

    <div class="row">
        <div class="span1">
            @Html.LabelFor(model => model.IsUser)
        </div>
        <div class="span1">
            @Html.LabelFor(model => model.IsViewer)
        </div>
        <div class="span1">
            @Html.LabelFor(model => model.IsSupervisor)
        </div>
        <div class="span4 offset3">
            <div class="span1">
                @Html.LabelFor(a => a.IsSmsNotificationType)
            </div>
            <div class="span1">
                @Html.LabelFor(a => a.IsFaxNotificationType)
            </div>
            <div class="span1">
                @Html.LabelFor(a => a.IsEmailNotificationType)
            </div>
        </div>
    </div>

    <div class="row">
        <div class="span1">
            @Html.HiddenFor(a => a.IsUser)
            @Html.CheckBoxFor(model => model.IsUser, new { @disabled = "disabled", @style = "margin-top: -14px", @tabindex = "14" })
        </div>
        <div class="span1">
            @Html.HiddenFor(a => a.IsViewer)
            @Html.CheckBoxFor(model => model.IsViewer, new { @disabled = "disabled", @style = "margin-top: -14px", @tabindex = "15" })
        </div>
        <div class="span1">
            @Html.HiddenFor(a => a.IsSupervisor)
            @Html.CheckBoxFor(model => model.IsSupervisor, new { @disabled = "disabled", @style = "margin-top: -14px", @tabindex = "16" })
        </div>
        <div class="span4 offset3">
            <div class="span1">
                @Html.HiddenFor(a => a.IsSmsNotificationType)
                @Html.CheckBoxFor(a => a.IsSmsNotificationType, new { @style = "margin-top: -14px", @tabindex = "17", @disabled = "disabled" })
            </div>
            <div class="span1">
                @Html.HiddenFor(a => a.IsFaxNotificationType)
                @Html.CheckBoxFor(a => a.IsFaxNotificationType, new { @style = "margin-top: -14px", @tabindex = "18", @disabled = "disabled" })
            </div>
            <div class="span1">
                @Html.HiddenFor(a => a.IsEmailNotificationType)
                @Html.CheckBoxFor(a => a.IsEmailNotificationType, new { @style = "margin-top: -14px", @tabindex = "19", @disabled = "disabled" })
            </div>
        </div>
    </div>

    <div class="row">
        <div class="span1 offset9">
            <input type="submit" value="Save" class="btn btn-primary" style="width: 100px; margin-left: -25px" />
        </div>
        <div class="span1">
            <a href='@Url.Action("Index", "Home")' id="confirm" class="btn btn-danger" style="width: 70px; margin-left: 0px">Cancel</a>
        </div>
    </div>

    @Html.HiddenFor(a => a.UserId)
    @Html.HiddenFor(a => a.CreatedById)
    @Html.HiddenFor(a => a.UserTypeId)
    @Html.HiddenFor(a => a.CreateDate)

}

<script type="text/javascript">

    $(document).ready(function () {

    });

    function GetMerchant() {
        return { merchant: $("#ddMerchant").val() };
    }

    function select(e) {
        var dropdownlist = $("#ddMerchant").data("kendoDropDownList");
        dropdownlist.select(e.item.index());
        var multiselect = $("#ddSites").data("kendoMultiSelect");
        multiselect.value([]);
        multiselect.dataSource.read();
    };

    $(".bt_red").easyconfirm({ locale: { title: 'Confirm ', button: ['No', 'Yes'], text: 'Merchant user record is not yet Saved. Do you want to continue?' } });

</script>