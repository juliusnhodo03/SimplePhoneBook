@using Kendo.Mvc.UI
@model Application.Dto.Product.ProductDto

@{
    Layout = null;
}

<div class="productSelectionWrapper">
    <div class="ui-widget-header" style="margin-bottom: 5px;">
        <h5 style="margin-left: 5px;">Product Selection</h5>
    </div>

    <div class="row">
        <div class="span2">
            @Html.LabelFor(a => a.ServiceTypeId, new { @class = "label required", @style = "width:150px !important" })
        </div>
        <div class="span2">
            @Html.DropDownList("GetServiceTypes", ViewData["ServiceTypes"] as SelectList, new { id = "ddlServiceTypes", @class = "dropdown" })
            @Html.ValidationMessageFor(m => m.ServiceTypeId)
        </div>
        <div class="span2 offset2">
            @Html.LabelFor(a => a.SettlementTypeId, new { @class = "label required", @style = "width:150px !important" })

        </div>
        <div class="span2">
            @Html.DropDownList("GetSettlementTypes", ViewData["SettlementTypes"] as SelectList, new { id = "ddlSettlementTypes", @class = "dropdown" })
            @Html.ValidationMessageFor(m => m.SettlementTypeId)
        </div>
    </div>

    <div class="row">
        <div class="span2">
            @Html.LabelFor(a => a.ImplementationDateString, new { @class = "label required", @style = "width:150px !important" })
        </div>
        <div class="span2">
            @Html.TextBoxFor(a => a.ImplementationDateString, "", new { @id = "edtImplementationDate" })
        </div>
        <div class="span2 offset2">
            @Html.LabelFor(a => a.TerminationDateString, new { @class = "label", @style = "width:150px !important", @id = "edtImplementationDate" })
        </div>
        <div class="span2">
            @Html.TextBoxFor(a => a.TerminationDateString, "", new { @id = "edtTerminationDate" })
        </div>
    </div>
    
    <div class="productFeeParent">
        <div class="row">
            <div class="span2">
                @Html.LabelFor(a => a.ProductTypeId, new { @class = "label required", @style = "width:150px !important" })
            </div>
            <div class="span2">
                @Html.DropDownList("GetProductTypes", ViewData["ProductTypes"] as SelectList, new { id = "productType", @class = "dropdown" })
            </div>
            <div class="row">
                <div class="pull-right">
                    <button name="remove" class="btn btn-mini btn-inverse" style="width:100px !important;" type="button">Remove Product</button>
                </div>
            </div>
        </div>

        <div id="productFees">

        </div>
    </div>
    

</div>


<script language="javascript">
    
    $(document).ready(function () {
    
        $("#edtImplementationDate").datepicker({
            dateFormat: 'dd MM yy',
            setDate: "0",
            maxDate: '+3y -1d',
            minDate: '-1y -1d'
        });

        $("#edtTerminationDate").datepicker({
            dateFormat: 'dd MM yy',
            setDate: "0",
            maxDate: '+3y -1d',
            minDate: '0'
        });


        $("#edtImplementationDate").attr("value", '');
        $("#edtTerminationDate").attr("value", '');


    });
    


    $("button[name='remove']").on("click", function() {
        var wrapper = $(this).parents("#productSelectionWrapper");
        wrapper.remove();
    });

    $("#start").change(function startChange() {
        alert();
        var endPicker = $("#end").data("kendoDatePicker"),
            startDate = this.value();

        if (startDate) {
            startDate = new Date(startDate);
            startDate.setDate(startDate.getDate() + 1);
            endPicker.min(startDate);
        }
    });

    $("#end").change(function endChange() {
        alert();
        var startPicker = $("#start").data("kendoDatePicker"),
            endDate = this.value();

        if (endDate) {
            endDate = new Date(endDate);
            endDate.setDate(endDate.getDate() - 1);
            startPicker.max(endDate);
        }
    });

    $("#productType").on("change", function() {

        var productType = $(this);
        var data = $(this).val();

        var parent;
        switch (parseInt(data)) {
            
        case 1:
            var depositUrl = "@Url.Action("DepositFeePartial", "Product")";
            $.get(depositUrl, function(template) {
                parent = productType.parents(".productFeeParent").find("#productFees");

                parent.children().remove();
                parent.append(template);
                hookupAutoComple();
            });
            break;
        case 2:
            var vaultUrl = "@Url.Action("VaultFeePartial", "Product")";
            $.get(vaultUrl, function(template) {
                parent = productType.parents(".productFeeParent").find("#productFees");
                parent.children().remove();
                parent.append(template);
                hookupAutoComple();
            });
            break;
        case 3:
            var citUrl = "@Url.Action("CitFeePartial", "Product")";
            $.get(citUrl, function(template) {
                parent = productType.parents(".productFeeParent").find("#productFees");
                parent.children().remove();
                parent.append(template);
                hookupAutoComple();
            });
            break;
        default:
            parent = productType.parents(".productFeeParent").find("#productFees");
            parent.children().remove();
            break;
        }
    });


    function hookupAutoComple() {

        var engine = new Bloodhound({
            datumTokenizer: function (d) { return Bloodhound.tokenizers.whitespace(d.code); },
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            prefetch: '@Url.Action("GetFees")',
            remote: '@Url.Action("GetFees")',
            dupDetector: false,
            limit: 5000,
        });

        // initialize the bloodhound suggestion engine
        engine.initialize();

        // instantiate the typeahead UI
        $('.code').typeahead(null, {
            displayKey: 'code',
            source: engine.ttAdapter()
        });

    }

    $('.code').on("blur", function () {
        var codeControl = $(this);
        var valueControl = codeControl.parents(".row").find(".value");
        var url = '@Url.Action("GetFeesValue")' + "/?code=" + codeControl.val();

        $.get(url, function (r) {
            valueControl.val(r.value);
        });
    });


</script>

