@using System.Activities.Statements
@using Kendo.Mvc.UI
@model Application.Dto.Account.AccountDto

@{
    ViewBag.Title = "View Bank Account";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    .label {
        width: 100px !important;
    }

    .required:after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>
<div class="well">


    <div class="ui-widget-header">
        <h4 style="margin-left: 5px">View Bank Account</h4>
    </div>

    <div id="content">
        <div class="ui-widget-content" style="padding: 5px;">

            <div class="row">
                <div class="span2">
                    @Html.LabelFor(model => model.SiteId, new { @class = "label required", @style = "width:150px !important" })
                </div>
                <div class="span2">
                    @Html.Kendo().DropDownListFor(a => a.SiteId).BindTo(ViewData["GetSites"] as SelectList).SelectedIndex(0).HtmlAttributes(new { @style = "width: 238px;", @disabled = "disabled;" })
                </div>
                <div class="span2 offset2">
                    @Html.LabelFor(model => model.CitCode, new { @class = "label required", @style = "width:150px !important" })
                </div>
                <div class="span2">
                    @Html.TextBoxFor(model => model.CitCode, new { @disabled = "disabled" })
                </div>
            </div>
            <br />

            <div class="row">
                <div class="span2">
                    @Html.LabelFor(model => model.BankId, new { @class = "label required", @style = "width:152px !important" })
                </div>
                <div class="span2">
                    <div class="span2">
                        @(Html.Kendo().DropDownList()
                                      .Name("BankId") //The name of the dropdownlist is mandatory. It specifies the "id" attribute of the widget.
                                      .DataTextField("Name") //Specifies which property of the Product to be used by the dropdownlist as a text.
                                      .DataValueField("Id") //Specifies which property of the Product to be used by the dropdownlist as a value.
                                      .DataSource(source =>
                                      {
                                          source.Read(read =>
                                          {
                                              read.Action("GetBanksKendo", "BankAccount"); //Set the Action and Controller name
                                          })
                                              .ServerFiltering(true); //If true the DataSource will not filter the data on the client.
                                      }).HtmlAttributes(new { @style = "width: 239px; margin-left: -20px", @disabled = "disabled" })
                        )
                        @Html.ValidationMessageFor(model => model.BankId)
                    </div>
                </div>

                <div class="span2 offset2">
                    @Html.LabelFor(model => model.BranchCode, new { @class = "label required", @style = "width:150px !important" })
                </div>
                <div class="span2">
                    @Html.TextBoxFor(model => model.BranchCode, new { @disabled = "disabled" })
                </div>


            </div>

            <div class="row">
                <div class="span2">
                    @Html.LabelFor(model => model.AccountTypeId, new { @class = "label required", @style = "width:150px !important" })
                </div>
                <div class="span2">
                    @Html.Kendo().DropDownListFor(a => a.AccountTypeId).BindTo(ViewData["GetAccountTypes"] as SelectList).SelectedIndex(0).HtmlAttributes(new { @style = "width: 238px;", @disabled = "disabled" })
                </div>
                <div class="span2 offset2">
                    @Html.LabelFor(model => model.BeneficiaryCode, new { @class = "label required", @disabled = "disabled", @style = "width:150px !important" })
                </div>
                <div class="span2">
                    @Html.TextBoxFor(model => model.BeneficiaryCode, new { @disabled = "disabled" })
                </div>
            </div>

            <div class="row">
                <div class="span2">
                    @Html.LabelFor(model => model.AccountHolderName, new { @class = "label required", @style = "width:150px !important" })
                </div>
                <div class="span2">
                    @Html.TextBoxFor(model => model.AccountHolderName, new { @disabled = "disabled" })
                </div>
                <div class="span2 offset2">
                    @Html.LabelFor(model => model.AccountNumber, new { @class = "label required", @style = "width:150px !important" })
                </div>
                <div class="span2">
                    @Html.TextBoxFor(model => model.AccountNumber, new { @disabled = "disabled" })
                </div>
            </div>
            
            <div class="row">
                <div class="input-prepend">
                    <div class="span2">
                        @Html.LabelFor(model => model.DefaultAccount, new { @class = "label", @style = "width:150px !important" })
                    </div>
                    <div class="span2">
                        @Html.CheckBoxFor(model => model.DefaultAccount, new { tabindex = "6", @disabled = "disabled", @style = "width:215px !important; margin-left: -85px" })
                    </div>
                    <div class="span2 offset2"></div>
                    <div class="span2"></div>
                </div>
            </div>
            
            <div class="row">
                <div class="input-prepend">
                    <div class="span2">
                        @Html.LabelFor(model => model.CurrentComments, new { @class = "add-on ", @style = "width:150px" })
                    </div>
                    <div class=" span9">
                        @Html.TextAreaFor(model => model.CurrentComments, new { @style = "width:101%; height: 100px", tabindex = "22" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="input-prepend">
                    <div class="span2">
                        @Html.LabelFor(model => model.PreviousComments, new { @class = "add-on ", @style = "width:150px" })
                    </div>
                    <div class=" span9">
                        @Html.TextAreaFor(model => model.PreviousComments, new { @style = "width:101%; height: 100px", tabindex = "22", @disabled = "disabled" })
                    </div>
                </div>
            </div>


            <div class="row">
                <div style="margin-left: 33px">
                    <div class="span3 offset10">
                        <a href='@Url.Action("Index")' class="btn btn-danger" style="width: 70px; margin-left: -45px">Exit</a>
                    </div>
                </div>
            </div>

        </div>
    </div>

</div>
