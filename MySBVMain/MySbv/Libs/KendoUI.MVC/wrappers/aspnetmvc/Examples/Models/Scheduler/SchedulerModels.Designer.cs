//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SchedulerModels", "FK_MeetingAtendee_Meeting", "Meetings", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Kendo.Mvc.Examples.Models.Scheduler.Meeting), "MeetingAtendees", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Kendo.Mvc.Examples.Models.Scheduler.MeetingAtendee), true)]
[assembly: EdmRelationshipAttribute("SchedulerModels", "FK_Meetings_Meetings", "Meetings", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Kendo.Mvc.Examples.Models.Scheduler.Meeting), "Meetings1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Kendo.Mvc.Examples.Models.Scheduler.Meeting), true)]
[assembly: EdmRelationshipAttribute("SchedulerModels", "FK_Tasks_Tasks", "Tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Kendo.Mvc.Examples.Models.Scheduler.Task), "Tasks1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Kendo.Mvc.Examples.Models.Scheduler.Task), true)]

#endregion

namespace Kendo.Mvc.Examples.Models.Scheduler
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SchedulerEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SchedulerEntities object using the connection string found in the 'SchedulerEntities' section of the application configuration file.
        /// </summary>
        public SchedulerEntities() : base("name=SchedulerEntities", "SchedulerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SchedulerEntities object.
        /// </summary>
        public SchedulerEntities(string connectionString) : base(connectionString, "SchedulerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SchedulerEntities object.
        /// </summary>
        public SchedulerEntities(EntityConnection connection) : base(connection, "SchedulerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MeetingAtendee> MeetingAtendees
        {
            get
            {
                if ((_MeetingAtendees == null))
                {
                    _MeetingAtendees = base.CreateObjectSet<MeetingAtendee>("MeetingAtendees");
                }
                return _MeetingAtendees;
            }
        }
        private ObjectSet<MeetingAtendee> _MeetingAtendees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Meeting> Meetings
        {
            get
            {
                if ((_Meetings == null))
                {
                    _Meetings = base.CreateObjectSet<Meeting>("Meetings");
                }
                return _Meetings;
            }
        }
        private ObjectSet<Meeting> _Meetings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Task> Tasks
        {
            get
            {
                if ((_Tasks == null))
                {
                    _Tasks = base.CreateObjectSet<Task>("Tasks");
                }
                return _Tasks;
            }
        }
        private ObjectSet<Task> _Tasks;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MeetingAtendees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMeetingAtendees(MeetingAtendee meetingAtendee)
        {
            base.AddObject("MeetingAtendees", meetingAtendee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Meetings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMeetings(Meeting meeting)
        {
            base.AddObject("Meetings", meeting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTasks(Task task)
        {
            base.AddObject("Tasks", task);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchedulerModels", Name="Meeting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Meeting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Meeting object.
        /// </summary>
        /// <param name="meetingID">Initial value of the MeetingID property.</param>
        /// <param name="start">Initial value of the Start property.</param>
        /// <param name="end">Initial value of the End property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="isAllDay">Initial value of the IsAllDay property.</param>
        public static Meeting CreateMeeting(global::System.Int32 meetingID, global::System.DateTime start, global::System.DateTime end, global::System.String title, global::System.String description, global::System.Boolean isAllDay)
        {
            Meeting meeting = new Meeting();
            meeting.MeetingID = meetingID;
            meeting.Start = start;
            meeting.End = end;
            meeting.Title = title;
            meeting.Description = description;
            meeting.IsAllDay = isAllDay;
            return meeting;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MeetingID
        {
            get
            {
                return _MeetingID;
            }
            set
            {
                if (_MeetingID != value)
                {
                    OnMeetingIDChanging(value);
                    ReportPropertyChanging("MeetingID");
                    _MeetingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MeetingID");
                    OnMeetingIDChanged();
                }
            }
        }
        private global::System.Int32 _MeetingID;
        partial void OnMeetingIDChanging(global::System.Int32 value);
        partial void OnMeetingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Start
        {
            get
            {
                return _Start;
            }
            set
            {
                OnStartChanging(value);
                ReportPropertyChanging("Start");
                _Start = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Start");
                OnStartChanged();
            }
        }
        private global::System.DateTime _Start;
        partial void OnStartChanging(global::System.DateTime value);
        partial void OnStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime End
        {
            get
            {
                return _End;
            }
            set
            {
                OnEndChanging(value);
                ReportPropertyChanging("End");
                _End = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("End");
                OnEndChanged();
            }
        }
        private global::System.DateTime _End;
        partial void OnEndChanging(global::System.DateTime value);
        partial void OnEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RoomID
        {
            get
            {
                return _RoomID;
            }
            set
            {
                OnRoomIDChanging(value);
                ReportPropertyChanging("RoomID");
                _RoomID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoomID");
                OnRoomIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RoomID;
        partial void OnRoomIDChanging(Nullable<global::System.Int32> value);
        partial void OnRoomIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAllDay
        {
            get
            {
                return _IsAllDay;
            }
            set
            {
                OnIsAllDayChanging(value);
                ReportPropertyChanging("IsAllDay");
                _IsAllDay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAllDay");
                OnIsAllDayChanged();
            }
        }
        private global::System.Boolean _IsAllDay;
        partial void OnIsAllDayChanging(global::System.Boolean value);
        partial void OnIsAllDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RecurrenceRule
        {
            get
            {
                return _RecurrenceRule;
            }
            set
            {
                OnRecurrenceRuleChanging(value);
                ReportPropertyChanging("RecurrenceRule");
                _RecurrenceRule = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RecurrenceRule");
                OnRecurrenceRuleChanged();
            }
        }
        private global::System.String _RecurrenceRule;
        partial void OnRecurrenceRuleChanging(global::System.String value);
        partial void OnRecurrenceRuleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RecurrenceID
        {
            get
            {
                return _RecurrenceID;
            }
            set
            {
                OnRecurrenceIDChanging(value);
                ReportPropertyChanging("RecurrenceID");
                _RecurrenceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecurrenceID");
                OnRecurrenceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RecurrenceID;
        partial void OnRecurrenceIDChanging(Nullable<global::System.Int32> value);
        partial void OnRecurrenceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RecurrenceException
        {
            get
            {
                return _RecurrenceException;
            }
            set
            {
                OnRecurrenceExceptionChanging(value);
                ReportPropertyChanging("RecurrenceException");
                _RecurrenceException = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RecurrenceException");
                OnRecurrenceExceptionChanged();
            }
        }
        private global::System.String _RecurrenceException;
        partial void OnRecurrenceExceptionChanging(global::System.String value);
        partial void OnRecurrenceExceptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StartTimezone
        {
            get
            {
                return _StartTimezone;
            }
            set
            {
                OnStartTimezoneChanging(value);
                ReportPropertyChanging("StartTimezone");
                _StartTimezone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StartTimezone");
                OnStartTimezoneChanged();
            }
        }
        private global::System.String _StartTimezone;
        partial void OnStartTimezoneChanging(global::System.String value);
        partial void OnStartTimezoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EndTimezone
        {
            get
            {
                return _EndTimezone;
            }
            set
            {
                OnEndTimezoneChanging(value);
                ReportPropertyChanging("EndTimezone");
                _EndTimezone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EndTimezone");
                OnEndTimezoneChanged();
            }
        }
        private global::System.String _EndTimezone;
        partial void OnEndTimezoneChanging(global::System.String value);
        partial void OnEndTimezoneChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModels", "FK_MeetingAtendee_Meeting", "MeetingAtendees")]
        public EntityCollection<MeetingAtendee> MeetingAtendees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MeetingAtendee>("SchedulerModels.FK_MeetingAtendee_Meeting", "MeetingAtendees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MeetingAtendee>("SchedulerModels.FK_MeetingAtendee_Meeting", "MeetingAtendees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModels", "FK_Meetings_Meetings", "Meetings1")]
        public EntityCollection<Meeting> Meetings1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Meeting>("SchedulerModels.FK_Meetings_Meetings", "Meetings1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Meeting>("SchedulerModels.FK_Meetings_Meetings", "Meetings1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModels", "FK_Meetings_Meetings", "Meetings")]
        public Meeting Meeting1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("SchedulerModels.FK_Meetings_Meetings", "Meetings").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("SchedulerModels.FK_Meetings_Meetings", "Meetings").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Meeting> Meeting1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("SchedulerModels.FK_Meetings_Meetings", "Meetings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Meeting>("SchedulerModels.FK_Meetings_Meetings", "Meetings", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchedulerModels", Name="MeetingAtendee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MeetingAtendee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MeetingAtendee object.
        /// </summary>
        /// <param name="meetingID">Initial value of the MeetingID property.</param>
        /// <param name="atendeeID">Initial value of the AtendeeID property.</param>
        public static MeetingAtendee CreateMeetingAtendee(global::System.Int32 meetingID, global::System.Int32 atendeeID)
        {
            MeetingAtendee meetingAtendee = new MeetingAtendee();
            meetingAtendee.MeetingID = meetingID;
            meetingAtendee.AtendeeID = atendeeID;
            return meetingAtendee;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MeetingID
        {
            get
            {
                return _MeetingID;
            }
            set
            {
                if (_MeetingID != value)
                {
                    OnMeetingIDChanging(value);
                    ReportPropertyChanging("MeetingID");
                    _MeetingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MeetingID");
                    OnMeetingIDChanged();
                }
            }
        }
        private global::System.Int32 _MeetingID;
        partial void OnMeetingIDChanging(global::System.Int32 value);
        partial void OnMeetingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AtendeeID
        {
            get
            {
                return _AtendeeID;
            }
            set
            {
                if (_AtendeeID != value)
                {
                    OnAtendeeIDChanging(value);
                    ReportPropertyChanging("AtendeeID");
                    _AtendeeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AtendeeID");
                    OnAtendeeIDChanged();
                }
            }
        }
        private global::System.Int32 _AtendeeID;
        partial void OnAtendeeIDChanging(global::System.Int32 value);
        partial void OnAtendeeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModels", "FK_MeetingAtendee_Meeting", "Meetings")]
        public Meeting Meeting
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("SchedulerModels.FK_MeetingAtendee_Meeting", "Meetings").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("SchedulerModels.FK_MeetingAtendee_Meeting", "Meetings").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Meeting> MeetingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("SchedulerModels.FK_MeetingAtendee_Meeting", "Meetings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Meeting>("SchedulerModels.FK_MeetingAtendee_Meeting", "Meetings", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SchedulerModels", Name="Task")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Task : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Task object.
        /// </summary>
        /// <param name="taskID">Initial value of the TaskID property.</param>
        /// <param name="start">Initial value of the Start property.</param>
        /// <param name="end">Initial value of the End property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="isAllDay">Initial value of the IsAllDay property.</param>
        public static Task CreateTask(global::System.Int32 taskID, global::System.DateTime start, global::System.DateTime end, global::System.String title, global::System.Boolean isAllDay)
        {
            Task task = new Task();
            task.TaskID = taskID;
            task.Start = start;
            task.End = end;
            task.Title = title;
            task.IsAllDay = isAllDay;
            return task;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskID
        {
            get
            {
                return _TaskID;
            }
            set
            {
                if (_TaskID != value)
                {
                    OnTaskIDChanging(value);
                    ReportPropertyChanging("TaskID");
                    _TaskID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TaskID");
                    OnTaskIDChanged();
                }
            }
        }
        private global::System.Int32 _TaskID;
        partial void OnTaskIDChanging(global::System.Int32 value);
        partial void OnTaskIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Start
        {
            get
            {
                return _Start;
            }
            set
            {
                OnStartChanging(value);
                ReportPropertyChanging("Start");
                _Start = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Start");
                OnStartChanged();
            }
        }
        private global::System.DateTime _Start;
        partial void OnStartChanging(global::System.DateTime value);
        partial void OnStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime End
        {
            get
            {
                return _End;
            }
            set
            {
                OnEndChanging(value);
                ReportPropertyChanging("End");
                _End = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("End");
                OnEndChanged();
            }
        }
        private global::System.DateTime _End;
        partial void OnEndChanging(global::System.DateTime value);
        partial void OnEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OwnerID
        {
            get
            {
                return _OwnerID;
            }
            set
            {
                OnOwnerIDChanging(value);
                ReportPropertyChanging("OwnerID");
                _OwnerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerID");
                OnOwnerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OwnerID;
        partial void OnOwnerIDChanging(Nullable<global::System.Int32> value);
        partial void OnOwnerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAllDay
        {
            get
            {
                return _IsAllDay;
            }
            set
            {
                OnIsAllDayChanging(value);
                ReportPropertyChanging("IsAllDay");
                _IsAllDay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAllDay");
                OnIsAllDayChanged();
            }
        }
        private global::System.Boolean _IsAllDay;
        partial void OnIsAllDayChanging(global::System.Boolean value);
        partial void OnIsAllDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RecurrenceRule
        {
            get
            {
                return _RecurrenceRule;
            }
            set
            {
                OnRecurrenceRuleChanging(value);
                ReportPropertyChanging("RecurrenceRule");
                _RecurrenceRule = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RecurrenceRule");
                OnRecurrenceRuleChanged();
            }
        }
        private global::System.String _RecurrenceRule;
        partial void OnRecurrenceRuleChanging(global::System.String value);
        partial void OnRecurrenceRuleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RecurrenceID
        {
            get
            {
                return _RecurrenceID;
            }
            set
            {
                OnRecurrenceIDChanging(value);
                ReportPropertyChanging("RecurrenceID");
                _RecurrenceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecurrenceID");
                OnRecurrenceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RecurrenceID;
        partial void OnRecurrenceIDChanging(Nullable<global::System.Int32> value);
        partial void OnRecurrenceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RecurrenceException
        {
            get
            {
                return _RecurrenceException;
            }
            set
            {
                OnRecurrenceExceptionChanging(value);
                ReportPropertyChanging("RecurrenceException");
                _RecurrenceException = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RecurrenceException");
                OnRecurrenceExceptionChanged();
            }
        }
        private global::System.String _RecurrenceException;
        partial void OnRecurrenceExceptionChanging(global::System.String value);
        partial void OnRecurrenceExceptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StartTimezone
        {
            get
            {
                return _StartTimezone;
            }
            set
            {
                OnStartTimezoneChanging(value);
                ReportPropertyChanging("StartTimezone");
                _StartTimezone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StartTimezone");
                OnStartTimezoneChanged();
            }
        }
        private global::System.String _StartTimezone;
        partial void OnStartTimezoneChanging(global::System.String value);
        partial void OnStartTimezoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EndTimezone
        {
            get
            {
                return _EndTimezone;
            }
            set
            {
                OnEndTimezoneChanging(value);
                ReportPropertyChanging("EndTimezone");
                _EndTimezone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EndTimezone");
                OnEndTimezoneChanged();
            }
        }
        private global::System.String _EndTimezone;
        partial void OnEndTimezoneChanging(global::System.String value);
        partial void OnEndTimezoneChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModels", "FK_Tasks_Tasks", "Tasks1")]
        public EntityCollection<Task> Tasks1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("SchedulerModels.FK_Tasks_Tasks", "Tasks1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("SchedulerModels.FK_Tasks_Tasks", "Tasks1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SchedulerModels", "FK_Tasks_Tasks", "Tasks")]
        public Task Task1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("SchedulerModels.FK_Tasks_Tasks", "Tasks").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("SchedulerModels.FK_Tasks_Tasks", "Tasks").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Task> Task1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("SchedulerModels.FK_Tasks_Tasks", "Tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Task>("SchedulerModels.FK_Tasks_Tasks", "Tasks", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
